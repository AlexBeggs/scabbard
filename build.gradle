buildscript {
    apply from: "constants.gradle"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${versions.agp}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "dev.arunkumar:scabbard-gradle-plugin:${publishVersion}"
        classpath "com.novoda:bintray-release:0.9.2"
    }
}

apply from: "gradle/local-properties.gradle"
apply from: "docker/resolve-dependencies.gradle"

allprojects {
    repositories {
        google()
        jcenter()
    }
    group groupId
    version publishVersion
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isWin = System.getProperty("os.name").toLowerCase().contains("win")
def samplePath = "samples:android-kotlin"
def sampleProject = project(samplePath)

//TODO Investigate migrating to GradleBuild. ATM has issues disabling daemon.
tasks.register("runScabbardProcessor" /*, GradleBuild*/) {
    group = "development"
    doLast {
        def isDebug = project.hasProperty("debug")
        if (isDebug) {
            delete fileTree(sampleProject.buildDir).matching {
                include "**/*.dot"
                include "**/*.png"
            }
        }
        exec {
            def shell = isWin ? "cmd" : "sh"
            def commandPrefix = isWin ? "" : "./"
            def shellArg = isWin ? "/c" : "-c"

            def gradleDebug = "-Dorg.gradle.debug=$isDebug"
            def daemon = isDebug ? "--no-daemon" : ""
            def command = "${commandPrefix}gradlew $daemon $gradleDebug ${samplePath}:kaptDebugKotlin"
            workingDir(projectDir)
            commandLine shell, shellArg, command
        }
    }
}

tasks.register("docsServe") {
    group = "documentation"
    description = "Serve documentation website and open browser"
    doLast {
        def url = "http://127.0.0.1:8000/"
        if (isWin) {
            exec { commandLine "cmd", "/c", "start $url" }
        } else {
            exec { commandLine "open", url }
        }
        exec { commandLine("mkdocs", "serve") }
    }
}

tasks.register("publishSampleImages") {
    group = "documentation"
    description = "Publishes sample images to website"
    doLast {
        copy {
            from "${sampleProject.buildDir}/tmp/kapt3/classes/debug/scabbard"
            include "*.svg"
            exclude "full_*.svg"
            into "docs/images"
        }
    }
    dependsOn sampleProject.tasks.named("kaptDebugKotlin")
}

// Common publish task to publish all artifacts
tasks.register("publishAllArtifacts") {
    group = "publishing"
    description = "Publishes all artifiacts"
    dependsOn project("scabbard-idea-plugin").tasks.named("publishPlugin")
    dependsOn gradle.includedBuild("scabbard-gradle-plugin").task(":publishPlugins")
    dependsOn project("scabbard-processor").tasks.named("bintrayUpload")
}